<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Portal</title>
    <style>
        /* General Body Styling */
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            margin: 0;
            padding: 20px;
            background-color: #f4f7f6; /* Light background for a clean look */
            color: #333; /* Darker text for readability */
            line-height: 1.6;
            overflow-x: hidden; /* Prevent horizontal scroll on body */
        }

        /* Main Heading */
        h1 {
            text-align: center;
            color: #2c3e50; /* Dark blue for emphasis */
            margin-bottom: 30px;
            font-size: 2.5em;
            letter-spacing: 1px;
            text-shadow: 1px 1px 2px rgba(0,0,0,0.1); /* Subtle text shadow */
        }

        /* Navigation Buttons Container */
        .nav-buttons {
            display: flex;
            justify-content: center;
            margin-bottom: 20px;
            gap: 15px; /* Space between buttons */
        }

        .nav-button {
            background-color: #3498db; /* Blue button */
            color: white;
            padding: 12px 25px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 1.1em;
            transition: background-color 0.3s ease, transform 0.2s ease;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

        .nav-button:hover {
            background-color: #2980b9; /* Darker blue on hover */
            transform: translateY(-2px); /* Slight lift effect */
        }

        .nav-button.active {
            background-color: #2c3e50; /* Darker background for active button */
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
            transform: translateY(0); /* Reset lift for active */
        }

        /* Container for Sections (User Statistics, URL Statistics) */
        .portal-container {
            display: flex; /* Use flexbox to manage section visibility */
            flex-direction: column; /* Stack sections vertically */
            max-width: 1200px; /* Max width for the entire portal content */
            margin: 0 auto; /* Center the container */
            padding: 20px;
            background-color: #ffffff;
            border-radius: 10px; /* Rounded corners for the main container */
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1); /* Soft shadow for depth */
        }

        /* Styling for each section card */
        .section-card {
            background-color: #ffffff;
            border-radius: 8px; /* Rounded corners for individual cards */
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05); /* Lighter shadow for cards */
            padding: 25px;
            overflow: hidden; /* Ensures content within card respects padding */
            width: 100%; /* Ensure card takes full width */
            display: none; /* Hidden by default, JavaScript will show */
            flex-shrink: 0; /* Prevent shrinking */
        }

        .section-card.active {
            display: block; /* Show active card */
        }

        .section-card h2 {
            color: #34495e; /* Slightly lighter blue for section headings */
            margin-top: 0;
            margin-bottom: 20px;
            font-size: 1.8em;
            border-bottom: 2px solid #ecf0f1; /* Underline effect for headings */
            padding-bottom: 10px;
        }

        /* Container for scrollable tables */
        .table-container {
            max-height: 400px; /* Maximum height before scrolling begins */
            overflow-y: scroll; /* Enable vertical scrolling */
            -ms-overflow-style: none;  /* IE and Edge - Hide scrollbar */
            scrollbar-width: none;  /* Firefox - Hide scrollbar */
        }

        /* Webkit browsers (Chrome, Safari, Opera) - Hide scrollbar */
        .table-container::-webkit-scrollbar {
            display: none;
        }

        /* Table Styling */
        table {
            width: 100%; /* Make table take full width of its container */
            border-collapse: collapse; /* Collapse borders for a cleaner look */
            margin-top: 15px;
        }

        th, td {
            padding: 12px 15px; /* Padding inside cells */
            text-align: left;
            border-bottom: 1px solid #ddd; /* Light border between rows */
            word-wrap: break-word; /* Ensures long content wraps within cell */
            white-space: normal; /* Prevents content from being a single line */
        }

        thead th {
            position: sticky;
            top: 0;
            background-color: #e0e6ea;
            color: #555;
            font-weight: bold;
            text-transform: uppercase;
            font-size: 0.9em;
            z-index: 1;
        }


        tbody tr:nth-child(even) {
            background-color: #f9f9f9; /* Zebra striping for rows */
        }

        tbody tr:hover {
            background-color: #f1f1f1; /* Highlight row on hover */
            transition: background-color 0.3s ease; /* Smooth transition for hover effect */
        }

        td a {
            color: #3498db; /* Blue color for links */
            text-decoration: none; /* No underline by default */
            word-break: break-all; /* Helps break long URLs if they don't fit */
        }

        td a:hover {
            text-decoration: underline; /* Underline on hover */
            color: #2980b9; /* Slightly darker blue on hover */
        }

        /* Responsive Table Cells for Small Screens */
        @media (max-width: 600px) {
            th, td {
                padding: 8px 10px; /* Reduce padding on smaller screens */
                font-size: 0.9em; /* Reduce font size on smaller screens */
            }
        }
    </style>
</head>
<body>
    <h1>Admin Portal</h1>
    <div class="nav-buttons">
        <button class="nav-button active" data-target="user-stats">User Statistics</button>
        <button class="nav-button" data-target="url-stats">URL Statistics</button>
    </div>
    <div class="portal-container">
        <div id="user-stats" class="section-card active">
            <h2>User Statistics</h2>
            <div class="table-container">
                <table>
                    <thead>
                        <tr>
                            <th>Sr. No.</th>
                            <th>Name</th>
                            <th>Email</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% if (locals.users && locals.users.length > 0) { %>
                            <% locals.users.forEach((user, index) => { %>
                            <tr>
                                <td><%= index + 1 %></td>
                                <td><%= user.name %></td>
                                <td><%= user.email %></td>
                            </tr>
                            <% }) %>
                        <% } else { %>
                            <tr>
                                <td colspan="3">No user data available.</td>
                            </tr>
                        <% } %>
                    </tbody>
                </table>
            </div>
        </div>

        <div id="url-stats" class="section-card">
            <h2>URL Statistics</h2>
            <div class="table-container">
                <table>
                    <thead>
                        <tr>
                            <th>Sr. No.</th>
                            <th>Original URL</th>
                            <th>Short URL</th>
                            <th>No. of Clicks</th>
                            <th>Created By</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% if (locals.urls && locals.urls.length > 0) { %>
                            <% locals.urls.forEach((url, index) => { %>
                            <tr>
                                <td><%= index + 1 %></td>
                                <td><%= url.originalURL %></td>
                                <td>
                                    <a href="http://localhost:3000/url/<%= url.shortID %>">
                                        http://localhost:3000/url/<%= url.shortID %>
                                    </a>
                                </td>
                                <td><%= url.visited.length %></td>
                                <td><%= url.createdByName %></td>
                            </tr>
                            <% }) %>
                        <% } else { %>
                            <tr>
                                <td colspan="5">No URL data available.</td>
                            </tr>
                        <% } %>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const navButtons = document.querySelectorAll('.nav-button');
            const sectionCards = document.querySelectorAll('.section-card');

            // Function to show a specific section and activate its button
            function showSection(targetId) {
                sectionCards.forEach(card => {
                    card.classList.remove('active');
                    card.style.opacity = 0; // Reset opacity for animation
                    card.style.transform = 'translateY(20px)'; // Reset transform for animation
                });
                navButtons.forEach(button => button.classList.remove('active'));

                const activeCard = document.getElementById(targetId);
                const activeButton = document.querySelector(`.nav-button[data-target="${targetId}"]`);

                if (activeCard) {
                    activeCard.classList.add('active');
                    // Trigger animation for the newly active card
                    setTimeout(() => {
                        activeCard.style.transition = 'opacity 0.6s ease-out, transform 0.6s ease-out';
                        activeCard.style.opacity = 1;
                        activeCard.style.transform = 'translateY(0)';
                    }, 50); // Small delay to ensure display:block applies first
                }
                if (activeButton) {
                    activeButton.classList.add('active');
                }
            }

            // Add event listeners to navigation buttons
            navButtons.forEach(button => {
                button.addEventListener('click', () => {
                    const targetId = button.dataset.target;
                    showSection(targetId);
                });
            });

            // Initially show the "User Statistics" section
            showSection('user-stats');
        });
    </script>
</body>
</html>